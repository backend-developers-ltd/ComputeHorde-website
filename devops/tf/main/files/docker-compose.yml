version: '3.7'

services:
  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
    logging:
      driver: awslogs
      options:
        awslogs-region: ${region}
        awslogs-group: /aws/ec2/${name}-${env}
        tag: '$${INSTANCE_ID_SUBST}-redis'
        awslogs-create-group: "true"

  app:
    image: ${ecr_base_url}/${ecr_image}
    init: true
    restart: always
    env_file: ./.env
    volumes:
      - backend-static:/root/src/static
      - ./media:/root/src/media
    depends_on:
      - redis
    logging: &logging-app
      driver: awslogs
      options:
        awslogs-region: ${region}
        awslogs-group: /aws/ec2/${name}-${env}
        tag: '$${INSTANCE_ID_SUBST}-app'
        awslogs-create-group: "true"

  celery-worker:
    image: ${ecr_base_url}/${ecr_image}
    init: true
    healthcheck:
      test: celery -A project status > /dev/null || exit 1
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=0
    command: ./celery-entrypoint.sh
    tmpfs: /run
    depends_on:
      - redis

  celery-beat:
    image: ${ecr_base_url}/${ecr_image}
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=0
    command: nice celery -A project beat -l INFO --schedule /tmp/celerybeat-schedule -f /tmp/logs/celery-beat.log
    volumes:
      - ./logs:/tmp/logs
    depends_on:
      - redis

  celery-flower:
    image: ${ecr_base_url}/${ecr_image}
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=0
    command: celery --app=project --broker="redis://redis:6379/0" flower --basic_auth="flower:"
    depends_on:
      - celery-worker
    ports:
      - 5555:5555

  nginx:
    image: 'ghcr.io/reef-technologies/nginx-rt:v1.2.1'
    restart: unless-stopped
    healthcheck:
      test: wget -q --spider http://0.0.0.0/admin/login || exit 1
    depends_on:
      - app
    command: nginx -g 'daemon off;'
    ports:
      - 8000:8000
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/config_helpers:/etc/nginx/config_helpers
      - backend-static:/srv/static:ro
      - ./media:/srv/media:ro
      - ./nginx/monitoring_certs:/etc/monitoring_certs
    logging:
      driver: awslogs
      options:
        awslogs-region: ${region}
        awslogs-group: /aws/ec2/${name}-${env}
        tag: '$${INSTANCE_ID_SUBST}-nginx'
        awslogs-create-group: "true"

volumes:
  backend-static:
